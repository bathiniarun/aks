# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f6d895c0-f931-442f-a16d-8bf284f431f2'
  imageRepository: 'bathiniarunaks'
  containerRegistry: 'cricketipl.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'cricketipl78804d27-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build test
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploytest
  displayName: Deploy test
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'deploytotest.jet'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Subscription 2(1)(9e562a82-805c-49a3-8024-85cc8e02b0cc)'
    azureResourceGroup: 'arun'
    kubernetesCluster: 'needforspeed'
    namespace: 'default'
    command: 'upgrade'
    chartType: 'Name'
    chartName: 'helm/f1'
    chartVersion: '1'
    releaseName: 'f1'
    valueFile: 'helm/f1'

    # Add the manifests to the command
    arguments: '--set-file=manifest=$(Pipeline.Workspace)/helm/f1/Chart.yaml --set-file=values=$(Pipeline.Workspace)/helm/f1/Values.yaml'

